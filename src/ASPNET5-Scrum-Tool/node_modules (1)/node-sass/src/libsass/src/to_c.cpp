#include "to_c.hpp"
#include "ast.hpp"

namespace Sass ***REMOVED***

  union Sass_Value* To_C::fallback_impl(AST_Node* n)
  ***REMOVED*** return sass_make_error("unknown type for C-API"); ***REMOVED***

  union Sass_Value* To_C::operator()(Boolean* b)
  ***REMOVED*** return sass_make_boolean(b->value()); ***REMOVED***

  union Sass_Value* To_C::operator()(Number* n)
  ***REMOVED*** return sass_make_number(n->value(), n->unit().c_str()); ***REMOVED***

  union Sass_Value* To_C::operator()(Custom_Warning* w)
  ***REMOVED*** return sass_make_warning(w->message().c_str()); ***REMOVED***

  union Sass_Value* To_C::operator()(Custom_Error* e)
  ***REMOVED*** return sass_make_error(e->message().c_str()); ***REMOVED***

  union Sass_Value* To_C::operator()(Color* c)
  ***REMOVED*** return sass_make_color(c->r(), c->g(), c->b(), c->a()); ***REMOVED***

  union Sass_Value* To_C::operator()(String_Constant* s)
  ***REMOVED***
    if (s->quote_mark()) ***REMOVED***
      return sass_make_qstring(s->value().c_str());
***REMOVED*** else ***REMOVED***
      return sass_make_string(s->value().c_str());
***REMOVED***
  ***REMOVED***

  union Sass_Value* To_C::operator()(String_Quoted* s)
  ***REMOVED*** return sass_make_qstring(s->value().c_str()); ***REMOVED***

  union Sass_Value* To_C::operator()(List* l)
  ***REMOVED***
    union Sass_Value* v = sass_make_list(l->length(), l->separator());
    for (size_t i = 0, L = l->length(); i < L; ++i) ***REMOVED***
      sass_list_set_value(v, i, (*l)[i]->perform(this));
***REMOVED***
    return v;
  ***REMOVED***

  union Sass_Value* To_C::operator()(Map* m)
  ***REMOVED***
    union Sass_Value* v = sass_make_map(m->length());
    int i = 0;
    for (auto key : m->keys()) ***REMOVED***
      sass_map_set_key(v, i, key->perform(this));
      sass_map_set_value(v, i, m->at(key)->perform(this));
      i++;
***REMOVED***
    return v;
  ***REMOVED***

  union Sass_Value* To_C::operator()(Arguments* a)
  ***REMOVED***
    union Sass_Value* v = sass_make_list(a->length(), SASS_COMMA);
    for (size_t i = 0, L = a->length(); i < L; ++i) ***REMOVED***
      sass_list_set_value(v, i, (*a)[i]->perform(this));
***REMOVED***
    return v;
  ***REMOVED***

  union Sass_Value* To_C::operator()(Argument* a)
  ***REMOVED*** return a->value()->perform(this); ***REMOVED***

  // not strictly necessary because of the fallback
  union Sass_Value* To_C::operator()(Null* n)
  ***REMOVED*** return sass_make_null(); ***REMOVED***

***REMOVED***;
