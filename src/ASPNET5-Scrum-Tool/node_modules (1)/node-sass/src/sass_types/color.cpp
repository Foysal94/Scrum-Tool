#include <nan.h>
#include "color.h"

namespace SassTypes
***REMOVED***
  Color::Color(Sass_Value* v) : SassValueWrapper(v) ***REMOVED******REMOVED***

  Sass_Value* Color::construct(const std::vector<v8::Local<v8::Value>> raw_val, Sass_Value **out) ***REMOVED***
    double a = 1.0, r = 0, g = 0, b = 0;
    unsigned argb;

    switch (raw_val.size()) ***REMOVED***
    case 1:
      if (!raw_val[0]->IsNumber()) ***REMOVED***
        return fail("Only argument should be an integer.", out);
  ***REMOVED***

      argb = Nan::To<int32_t>(raw_val[0]).FromJust();
      a = (double)((argb >> 030) & 0xff) / 0xff;
      r = (double)((argb >> 020) & 0xff);
      g = (double)((argb >> 010) & 0xff);
      b = (double)(argb & 0xff);
      break;

    case 4:
      if (!raw_val[3]->IsNumber()) ***REMOVED***
        return fail("Constructor arguments should be numbers exclusively.", out);
  ***REMOVED***

      a = Nan::To<double>(raw_val[3]).FromJust();
      // fall through vvv

    case 3:
      if (!raw_val[0]->IsNumber() || !raw_val[1]->IsNumber() || !raw_val[2]->IsNumber()) ***REMOVED***
        return fail("Constructor arguments should be numbers exclusively.", out);
  ***REMOVED***

      r = Nan::To<double>(raw_val[0]).FromJust();
      g = Nan::To<double>(raw_val[1]).FromJust();
      b = Nan::To<double>(raw_val[2]).FromJust();
      break;

    case 0:
      break;

    default:
      return fail("Constructor should be invoked with either 0, 1, 3 or 4 arguments.", out);
***REMOVED***

    return *out = sass_make_color(r, g, b, a);
  ***REMOVED***

  void Color::initPrototype(v8::Local<v8::FunctionTemplate> proto) ***REMOVED***
    Nan::SetPrototypeMethod(proto, "getR", GetR);
    Nan::SetPrototypeMethod(proto, "getG", GetG);
    Nan::SetPrototypeMethod(proto, "getB", GetB);
    Nan::SetPrototypeMethod(proto, "getA", GetA);
    Nan::SetPrototypeMethod(proto, "setR", SetR);
    Nan::SetPrototypeMethod(proto, "setG", SetG);
    Nan::SetPrototypeMethod(proto, "setB", SetB);
    Nan::SetPrototypeMethod(proto, "setA", SetA);
  ***REMOVED***

  NAN_METHOD(Color::GetR) ***REMOVED***
    info.GetReturnValue().Set(sass_color_get_r(unwrap(info.This())->value));
  ***REMOVED***

  NAN_METHOD(Color::GetG) ***REMOVED***
    info.GetReturnValue().Set(sass_color_get_g(unwrap(info.This())->value));
  ***REMOVED***

  NAN_METHOD(Color::GetB) ***REMOVED***
    info.GetReturnValue().Set(sass_color_get_b(unwrap(info.This())->value));
  ***REMOVED***

  NAN_METHOD(Color::GetA) ***REMOVED***
    info.GetReturnValue().Set(sass_color_get_a(unwrap(info.This())->value));
  ***REMOVED***

  NAN_METHOD(Color::SetR) ***REMOVED***
    if (info.Length() != 1) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Expected just one argument").ToLocalChecked());
***REMOVED***

    if (!info[0]->IsNumber()) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Supplied value should be a number").ToLocalChecked());
***REMOVED***

    sass_color_set_r(unwrap(info.This())->value, Nan::To<double>(info[0]).FromJust());
  ***REMOVED***

  NAN_METHOD(Color::SetG) ***REMOVED***
    if (info.Length() != 1) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Expected just one argument").ToLocalChecked());
***REMOVED***

    if (!info[0]->IsNumber()) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Supplied value should be a number").ToLocalChecked());
***REMOVED***

    sass_color_set_g(unwrap(info.This())->value, Nan::To<double>(info[0]).FromJust());
  ***REMOVED***

  NAN_METHOD(Color::SetB) ***REMOVED***
    if (info.Length() != 1) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Expected just one argument").ToLocalChecked());
***REMOVED***

    if (!info[0]->IsNumber()) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Supplied value should be a number").ToLocalChecked());
***REMOVED***

    sass_color_set_b(unwrap(info.This())->value, Nan::To<double>(info[0]).FromJust());
  ***REMOVED***

  NAN_METHOD(Color::SetA) ***REMOVED***
    if (info.Length() != 1) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Expected just one argument").ToLocalChecked());
***REMOVED***

    if (!info[0]->IsNumber()) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Supplied value should be a number").ToLocalChecked());
***REMOVED***

    sass_color_set_a(unwrap(info.This())->value, Nan::To<double>(info[0]).FromJust());
  ***REMOVED***
***REMOVED***
