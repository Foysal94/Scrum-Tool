#include <nan.h>
#include "null.h"

namespace SassTypes
***REMOVED***
  Nan::Persistent<v8::Function> Null::constructor;
  bool Null::constructor_locked = false;

  Null::Null() ***REMOVED******REMOVED***

  Null& Null::get_singleton() ***REMOVED***
    static Null singleton_instance;
    return singleton_instance;
  ***REMOVED***

  v8::Local<v8::Function> Null::get_constructor() ***REMOVED***
    Nan::EscapableHandleScope scope;
    v8::Local<v8::Function> conslocal;
    if (constructor.IsEmpty()) ***REMOVED***
      v8::Local<v8::FunctionTemplate> tpl = Nan::New<v8::FunctionTemplate>(New);

      tpl->SetClassName(Nan::New("SassNull").ToLocalChecked());
      tpl->InstanceTemplate()->SetInternalFieldCount(1);

      conslocal = Nan::GetFunction(tpl).ToLocalChecked();
      constructor.Reset(conslocal);

      get_singleton().js_object.Reset(Nan::NewInstance(conslocal).ToLocalChecked());
      Nan::SetInternalFieldPointer(Nan::New(get_singleton().js_object), 0, &get_singleton());
      Nan::Set(conslocal, Nan::New("NULL").ToLocalChecked(), Nan::New(get_singleton().js_object));

      constructor_locked = true;
***REMOVED*** else ***REMOVED***
      conslocal = Nan::New(constructor);
***REMOVED***

    return scope.Escape(conslocal);
  ***REMOVED***

  Sass_Value* Null::get_sass_value() ***REMOVED***
    return sass_make_null();
  ***REMOVED***

  v8::Local<v8::Object> Null::get_js_object() ***REMOVED***
    return Nan::New(this->js_object);
  ***REMOVED***

  NAN_METHOD(Null::New) ***REMOVED***

    if (info.IsConstructCall()) ***REMOVED***
      if (constructor_locked) ***REMOVED***
        return Nan::ThrowTypeError(Nan::New("Cannot instantiate SassNull").ToLocalChecked());
  ***REMOVED***
***REMOVED***
    else ***REMOVED***
      info.GetReturnValue().Set(get_singleton().get_js_object());
***REMOVED***
  ***REMOVED***
***REMOVED***
