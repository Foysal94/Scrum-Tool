#include <nan.h>
#include "string.h"
#include "../create_string.h"

namespace SassTypes
***REMOVED***
  String::String(Sass_Value* v) : SassValueWrapper(v) ***REMOVED******REMOVED***

  Sass_Value* String::construct(const std::vector<v8::Local<v8::Value>> raw_val, Sass_Value **out) ***REMOVED***
    char const* value = "";

    if (raw_val.size() >= 1) ***REMOVED***
      if (!raw_val[0]->IsString()) ***REMOVED***
        return fail("Argument should be a string.", out);
  ***REMOVED***

      value = create_string(raw_val[0]);
***REMOVED***

    return *out = sass_make_string(value);
  ***REMOVED***

  void String::initPrototype(v8::Local<v8::FunctionTemplate> proto) ***REMOVED***
    Nan::SetPrototypeMethod(proto, "getValue", GetValue);
    Nan::SetPrototypeMethod(proto, "setValue", SetValue);
  ***REMOVED***

  NAN_METHOD(String::GetValue) ***REMOVED***
    info.GetReturnValue().Set(Nan::New<v8::String>(sass_string_get_value(unwrap(info.This())->value)).ToLocalChecked());
  ***REMOVED***

  NAN_METHOD(String::SetValue) ***REMOVED***
    if (info.Length() != 1) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Expected just one argument").ToLocalChecked());
***REMOVED***

    if (!info[0]->IsString()) ***REMOVED***
      return Nan::ThrowTypeError(Nan::New("Supplied value should be a string").ToLocalChecked());
***REMOVED***

    sass_string_set_value(unwrap(info.This())->value, create_string(info[0]));
  ***REMOVED***
***REMOVED***
